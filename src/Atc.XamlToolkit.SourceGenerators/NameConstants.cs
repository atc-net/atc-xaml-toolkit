namespace Atc.XamlToolkit.SourceGenerators;

internal static class NameConstants
{
    public const string AfterChangedCallback = nameof(AfterChangedCallback);
    public const string Attach = nameof(Attach);
    public const string AttachedProperty = nameof(AttachedProperty);
    public const string AttachedPropertyAttribute = nameof(AttachedPropertyAttribute);
    public const string AutoSetIsBusy = nameof(AutoSetIsBusy);
    public const string AvaloniaObject = nameof(AvaloniaObject);
    public const string BeforeChangedCallback = nameof(BeforeChangedCallback);
    public const string Behavior = nameof(Behavior);
    public const string BroadcastOnChange = nameof(BroadcastOnChange);
    public const string CancellationToken = nameof(CancellationToken);
    public const string CancellationTokenNone = nameof(CancellationToken) + ".None";
    public const string CanExecute = nameof(CanExecute);
    public const string Category = nameof(Category);
    public const string Command = nameof(Command);
    public const string CommandName = nameof(CommandName);
    public const string CoerceValueCallback = nameof(CoerceValueCallback);
    public const string ComputedProperty = nameof(ComputedProperty);
    public const string ComputedPropertyAttribute = nameof(ComputedPropertyAttribute);
    public const string DefaultValue = nameof(DefaultValue);
    public const string DefaultUpdateSourceTrigger = nameof(DefaultUpdateSourceTrigger);
    public const string DependencyProperty = nameof(DependencyProperty);
    public const string DependencyPropertyAttribute = nameof(DependencyPropertyAttribute);
    public const string DependencyObject = nameof(DependencyObject);
    public const string DependentCommandNames = nameof(DependentCommandNames);
    public const string DependentPropertyNames = nameof(DependentPropertyNames);
    public const string Description = nameof(Description);
    public const string DtoType = nameof(DtoType);
    public const string EnableValidationOnPropertyChanged = nameof(EnableValidationOnPropertyChanged);
    public const string EnableValidationOnInit = nameof(EnableValidationOnInit);
    public const string ExecuteOnBackgroundThread = nameof(ExecuteOnBackgroundThread);
    public const string Flags = nameof(Flags);
    public const string FrameworkElement = nameof(FrameworkElement);
    public const string Handler = nameof(Handler);
    public const string HandlerType = nameof(HandlerType);
    public const string Helper = nameof(Helper);
    public const string IgnoreMethodNames = nameof(IgnoreMethodNames);
    public const string IgnorePropertyNames = nameof(IgnorePropertyNames);
    public const string IObservableObject = nameof(IObservableObject);
    public const string InvertCanExecute = nameof(InvertCanExecute);
    public const string IRelayCommand = nameof(IRelayCommand);
    public const string IRelayCommandAsync = nameof(IRelayCommandAsync);
    public const string IsAnimationProhibited = nameof(IsAnimationProhibited);
    public const string MainWindowViewModelBase = nameof(MainWindowViewModelBase);
    public const string Name = nameof(Name);
    public const string NotifyPropertyChangedFor = nameof(NotifyPropertyChangedFor);
    public const string NotifyPropertyChangedForAttribute = nameof(NotifyPropertyChangedForAttribute);
    public const string ObservableDtoViewModel = nameof(ObservableDtoViewModel);
    public const string ObservableDtoViewModelAttribute = nameof(ObservableDtoViewModelAttribute);
    public const string ObservableObject = nameof(ObservableObject);
    public const string ObservableProperty = nameof(ObservableProperty);
    public const string ObservablePropertyAttribute = nameof(ObservablePropertyAttribute);
    public const string ParameterValue = nameof(ParameterValue);
    public const string ParameterValues = nameof(ParameterValues);
    public const string PropertyChangedCallback = nameof(PropertyChangedCallback);
    public const string PropertyName = nameof(PropertyName);
    public const string Register = nameof(Register);
    public const string RegisterAttached = nameof(RegisterAttached);
    public const string RelayCommand = nameof(RelayCommand);
    public const string RelayCommandAsync = nameof(RelayCommandAsync);
    public const string RelayCommandAttribute = nameof(RelayCommandAttribute);
    public const string RoutedEvent = nameof(RoutedEvent);
    public const string RoutedEventAttribute = nameof(RoutedEventAttribute);
    public const string RoutedEventHandler = nameof(RoutedEventHandler);
    public const string RoutingStrategy = nameof(RoutingStrategy);
    public const string StyledProperty = nameof(StyledProperty);
    public const string StyledPropertyAttribute = nameof(StyledPropertyAttribute);
    public const string SupportsCancellation = nameof(SupportsCancellation);
    public const string Task = nameof(Task);
    public const string UseIsDirty = nameof(UseIsDirty);
    public const string UserControl = nameof(UserControl);
    public const string ValidateValueCallback = nameof(ValidateValueCallback);
    public const string ValueTask = nameof(ValueTask);
    public const string ViewModel = nameof(ViewModel);
    public const string ViewModelBase = nameof(ViewModelBase);
    public const string ViewModelDialogBase = nameof(ViewModelDialogBase);
}