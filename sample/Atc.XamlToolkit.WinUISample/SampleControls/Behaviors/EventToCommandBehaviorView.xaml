<UserControl
    x:Class="Atc.XamlToolkit.WinUISample.SampleControls.Behaviors.EventToCommandBehaviorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:Atc.XamlToolkit.Behaviors"
    xmlns:local="using:Atc.XamlToolkit.WinUISample.SampleControls.Behaviors"
    mc:Ignorable="d">

    <UserControl.DataContext>
        <local:EventToCommandBehaviorViewModel />
    </UserControl.DataContext>

    <ScrollViewer>
        <StackPanel Margin="20" Spacing="10">
            <TextBlock
                FontSize="20"
                FontWeight="Bold"
                Text="EventToCommandBehavior Sample" />

            <MenuFlyoutSeparator />

            <!--  Example 1: Button Click Event  -->
            <Border
                Padding="10"
                BorderBrush="Gray"
                BorderThickness="1"
                CornerRadius="5">
                <StackPanel Spacing="10">
                    <TextBlock
                        FontWeight="SemiBold"
                        Text="Example 1: Button Click Event" />

                    <TextBlock
                        TextWrapping="Wrap"
                        Text="Click the button to execute a command via EventToCommandBehavior:" />

                    <Button
                        Width="200"
                        HorizontalAlignment="Left"
                        Padding="10,5"
                        Content="Click Me">
                        <interactivity:Interaction.Behaviors>
                            <behaviors:EventToCommandBehavior
                                EventName="Click"
                                Command="{x:Bind ViewModel.ButtonClickCommand}" />
                        </interactivity:Interaction.Behaviors>
                    </Button>

                    <TextBlock>
                        <Run Text="Button clicked: " />
                        <Run FontWeight="Bold" Text="{x:Bind ViewModel.ClickCount, Mode=OneWay}" />
                        <Run Text=" times" />
                    </TextBlock>
                </StackPanel>
            </Border>

            <!--  Example 2: ListBox SelectionChanged with EventArgs  -->
            <Border
                Padding="10"
                BorderBrush="Gray"
                BorderThickness="1"
                CornerRadius="5">
                <StackPanel Spacing="10">
                    <TextBlock
                        FontWeight="SemiBold"
                        Text="Example 2: ListBox SelectionChanged with EventArgs" />

                    <TextBlock
                        TextWrapping="Wrap"
                        Text="Select items to see the selection changed event passed to the command:" />

                    <ListBox
                        Width="300"
                        Height="120"
                        HorizontalAlignment="Left"
                        ItemsSource="{x:Bind ViewModel.Items}"
                        SelectionMode="Single">
                        <interactivity:Interaction.Behaviors>
                            <behaviors:EventToCommandBehavior
                                EventName="SelectionChanged"
                                Command="{x:Bind ViewModel.SelectionChangedCommand}"
                                PassEventArgsToCommand="True" />
                        </interactivity:Interaction.Behaviors>
                    </ListBox>

                    <TextBlock TextWrapping="Wrap">
                        <Run Text="Last selection: " />
                        <Run FontWeight="Bold" Text="{x:Bind ViewModel.LastSelection, Mode=OneWay}" />
                    </TextBlock>
                </StackPanel>
            </Border>

            <!--  Example 3: TextBox TextChanged with CommandParameter  -->
            <Border
                Padding="10"
                BorderBrush="Gray"
                BorderThickness="1"
                CornerRadius="5">
                <StackPanel Spacing="10">
                    <TextBlock
                        FontWeight="SemiBold"
                        Text="Example 3: TextBox TextChanged with CommandParameter" />

                    <TextBlock
                        TextWrapping="Wrap"
                        Text="Type in the textbox to trigger the command with a custom parameter:" />

                    <TextBox
                        Width="300"
                        HorizontalAlignment="Left">
                        <interactivity:Interaction.Behaviors>
                            <behaviors:EventToCommandBehavior
                                EventName="TextChanged"
                                Command="{x:Bind ViewModel.TextChangedCommand}"
                                CommandParameter="From TextBox" />
                        </interactivity:Interaction.Behaviors>
                    </TextBox>

                    <TextBlock TextWrapping="Wrap">
                        <Run Text="Text changed triggered: " />
                        <Run FontWeight="Bold" Text="{x:Bind ViewModel.TextChangeCount, Mode=OneWay}" />
                        <Run Text=" times" />
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap">
                        <Run Text="Parameter received: " />
                        <Run FontWeight="Bold" Text="{x:Bind ViewModel.LastParameter, Mode=OneWay}" />
                    </TextBlock>
                </StackPanel>
            </Border>

            <!--  Example 4: PointerEntered and PointerExited Events  -->
            <Border
                Padding="10"
                BorderBrush="Gray"
                BorderThickness="1"
                CornerRadius="5">
                <StackPanel Spacing="10">
                    <TextBlock
                        FontWeight="SemiBold"
                        Text="Example 4: PointerEntered and PointerExited Events" />

                    <TextBlock
                        TextWrapping="Wrap"
                        Text="Hover over the border to trigger pointer events:" />

                    <Border
                        Width="300"
                        Height="100"
                        HorizontalAlignment="Left"
                        Background="{x:Bind ViewModel.BorderBackground, Mode=OneWay}"
                        BorderBrush="Gray"
                        BorderThickness="2"
                        CornerRadius="5">
                        <interactivity:Interaction.Behaviors>
                            <behaviors:EventToCommandBehavior
                                EventName="PointerEntered"
                                Command="{x:Bind ViewModel.MouseEnterCommand}" />
                            <behaviors:EventToCommandBehavior
                                EventName="PointerExited"
                                Command="{x:Bind ViewModel.MouseLeaveCommand}" />
                        </interactivity:Interaction.Behaviors>

                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Text="Hover over me!" />
                    </Border>

                    <TextBlock>
                        <Run Text="Pointer state: " />
                        <Run FontWeight="Bold" Text="{x:Bind ViewModel.MouseState, Mode=OneWay}" />
                    </TextBlock>
                </StackPanel>
            </Border>
        </StackPanel>
    </ScrollViewer>
</UserControl>
